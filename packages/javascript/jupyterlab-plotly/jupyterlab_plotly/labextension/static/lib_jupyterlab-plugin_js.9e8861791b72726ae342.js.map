{"version":3,"file":"lib_jupyterlab-plugin_js.9e8861791b72726ae342.js","mappings":"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","sources":["webpack://jupyterlab-plotly/./src/Figure.ts","webpack://jupyterlab-plotly/./src/jupyterlab-plugin.ts","webpack://jupyterlab-plotly/./src/version.ts"],"sourcesContent":["import type { DOMWidgetModel } from \"@jupyter-widgets/base\";\nimport _ from \"lodash\";\nimport Plotly from \"plotly.js\";\n\n// @ts-ignore\nwindow.PlotlyConfig = { MathJaxConfig: \"local\" };\n\ntype InputDeviceState = {\n  alt: any;\n  ctrl: any;\n  meta: any;\n  shift: any;\n  button: any;\n  buttons: any;\n};\n\ntype Js2PyLayoutDeltaMsg = {\n  layout_delta: any;\n  layout_edit_id: any;\n};\n\ntype Js2PyMsg = {\n  source_view_id: string;\n};\n\ntype Js2PyPointsCallbackMsg = {\n  event_type: string;\n  points: Points | null;\n  device_state: InputDeviceState | null;\n  selector: Selector | null;\n};\n\ntype Js2PyRelayoutMsg = Js2PyMsg & {\n  relayout_data: any;\n};\n\ntype Js2PyRestyleMsg = Js2PyMsg & {\n  style_data: any;\n  style_traces?: null | number | number[];\n};\n\ntype Js2PyTraceDeltasMsg = {\n  trace_deltas: any;\n  trace_edit_id: any;\n};\n\ntype Js2PyUpdateMsg = Js2PyMsg & {\n  style_data: any;\n  layout_data: any;\n  style_traces?: null | number | number[];\n};\n\ntype Points = {\n  trace_indexes: number[];\n  point_indexes: number[];\n  xs: number[];\n  ys: number[];\n  zs?: number[];\n};\n\ntype Py2JsMsg = {\n  trace_edit_id?: any;\n  layout_edit_id?: any;\n  source_view_id?: any;\n};\n\ntype Py2JsAddTracesMsg = Py2JsMsg & {\n  trace_data: any;\n};\n\ntype Py2JsAnimateMsg = Py2JsMsg & {\n  style_data: any;\n  layout_data: any;\n  style_traces?: null | number | number[];\n  animation_opts?: any;\n};\n\ntype Py2JsDeleteTracesMsg = Py2JsMsg & {\n  delete_inds: number[];\n};\n\ntype Py2JsMoveTracesMsg = {\n  current_trace_inds: number[];\n  new_trace_inds: number[];\n};\n\ntype Py2JsRestyleMsg = Py2JsMsg & {\n  restyle_data: any;\n  restyle_traces?: null | number | number[];\n};\n\ntype Py2JsRelayoutMsg = Py2JsMsg & {\n  relayout_data: any;\n};\n\ntype Py2JsRemoveLayoutPropsMsg = {\n  remove_props: any;\n};\n\ntype Py2JsRemoveTracePropsMsg = {\n  remove_props: any;\n  remove_trace: any;\n};\n\ntype Py2JsUpdateMsg = Py2JsMsg & {\n  style_data: any;\n  layout_data: any;\n  style_traces?: null | number | number[];\n};\n\ntype Selector = {\n  type: \"box\" | \"lasso\";\n  selector_state:\n    | { xrange: number[]; yrange: number[] }\n    | { xs: number[]; ys: number[] };\n};\n\n// Model\n// =====\n/**\n * A FigureModel holds a mirror copy of the state of a FigureWidget on\n * the Python side.  There is a one-to-one relationship between JavaScript\n * FigureModels and Python FigureWidgets. The JavaScript FigureModel is\n * initialized as soon as a Python FigureWidget initialized, this happens\n * even before the widget is first displayed in the Notebook\n * @type {widgets.DOMWidgetModel}\n */\n\ntype Serializer<In=any, Out=any> = {\n  deserialize(value: Out): In;\n  serialize(value: In): Out;\n}\n\nexport class FigureModel {\n  model: DOMWidgetModel;\n  serializers: Record<string, Serializer>\n\n  constructor(model: DOMWidgetModel, serializers: Record<string, Serializer>) {\n    this.model = model;\n    this.serializers = serializers;\n  }\n\n  get(key: string) {\n    const serializer = this.serializers[key];\n    const update = this.model.get(key)\n    if (serializer?.deserialize) {\n      return serializer.deserialize(update)\n    }\n    return update;\n  }\n\n  set(key: string, value: unknown) {\n    let serializer = this.serializers[key];\n    if (serializer?.serialize) {\n      value = serializer.serialize(value)\n    }\n    this.model.set(key, value);\n  }\n  \n  on(event: string, cb: () => void) {\n    this.model.on(event, cb);\n  }\n\n  save_changes() {\n    this.model.save_changes();\n  }\n\n  defaults() {\n    return {\n\n      // Data and Layout\n      // ---------------\n      // The _data and _layout properties are synchronized with the\n      // Python side on initialization only.  After initialization, these\n      // properties are kept in sync through the use of the _py2js_*\n      // messages\n      _data: [],\n      _layout: {},\n      _config: {},\n\n      // Python -> JS messages\n      // ---------------------\n      // Messages are implemented using trait properties. This is done so\n      // that we can take advantage of ipywidget's binary serialization\n      // protocol.\n      //\n      // Messages are sent by the Python side by assigning the message\n      // contents to the appropriate _py2js_* property, and then immediately\n      // setting it to None.  Messages are received by the JavaScript\n      // side by registering property change callbacks in the initialize\n      // methods for FigureModel and FigureView. e.g. (where this is a\n      // FigureModel):\n      //\n      //      this.on('change:_py2js_addTraces', this.do_addTraces, this);\n      //\n      // Message handling methods, do_addTraces, are responsible for\n      // performing the appropriate action if the message contents are\n      // not null\n\n      /**\n       * @typedef {null|Object} Py2JsAddTracesMsg\n       * @property {Array.<Object>} trace_data\n       *  Array of traces to append to the end of the figure's current traces\n       * @property {Number} trace_edit_id\n       *  Edit ID to use when returning trace deltas using\n       *  the _js2py_traceDeltas message.\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message.\n       */\n      _py2js_addTraces: null,\n\n      /**\n       * @typedef {null|Object} Py2JsDeleteTracesMsg\n       * @property {Array.<Number>} delete_inds\n       *  Array of indexes of traces to be deleted, in ascending order\n       * @property {Number} trace_edit_id\n       *  Edit ID to use when returning trace deltas using\n       *  the _js2py_traceDeltas message.\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message.\n       */\n      _py2js_deleteTraces: null,\n\n      /**\n       * @typedef {null|Object} Py2JsMoveTracesMsg\n       * @property {Array.<Number>} current_trace_inds\n       *  Array of the current indexes of traces to be moved\n       * @property {Array.<Number>} new_trace_inds\n       *  Array of the new indexes that traces should be moved to.\n       */\n      _py2js_moveTraces: null,\n\n      /**\n       * @typedef {null|Object} Py2JsRestyleMsg\n       * @property {Object} restyle_data\n       *  Restyle data as accepted by Plotly.restyle\n       * @property {null|Array.<Number>} restyle_traces\n       *  Array of indexes of the traces that the resytle operation applies\n       *  to, or null to apply the operation to all traces\n       * @property {Number} trace_edit_id\n       *  Edit ID to use when returning trace deltas using\n       *  the _js2py_traceDeltas message\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message\n       * @property {null|String} source_view_id\n       *  view_id of the FigureView that triggered the original restyle\n       *  event (e.g. by clicking the legend), or null if the restyle was\n       *  triggered from Python\n       */\n      _py2js_restyle: null,\n\n      /**\n       * @typedef {null|Object} Py2JsRelayoutMsg\n       * @property {Object} relayout_data\n       *  Relayout data as accepted by Plotly.relayout\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message\n       * @property {null|String} source_view_id\n       *  view_id of the FigureView that triggered the original relayout\n       *  event (e.g. by clicking the zoom button), or null if the\n       *  relayout was triggered from Python\n       */\n      _py2js_relayout: null,\n\n      /**\n       * @typedef {null|Object} Py2JsUpdateMsg\n       * @property {Object} style_data\n       *  Style data as accepted by Plotly.update\n       * @property {Object} layout_data\n       *  Layout data as accepted by Plotly.update\n       * @property {Array.<Number>} style_traces\n       *  Array of indexes of the traces that the update operation applies\n       *  to, or null to apply the operation to all traces\n       * @property {Number} trace_edit_id\n       *  Edit ID to use when returning trace deltas using\n       *  the _js2py_traceDeltas message\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message\n       * @property {null|String} source_view_id\n       *  view_id of the FigureView that triggered the original update\n       *  event (e.g. by clicking a button), or null if the update was\n       *  triggered from Python\n       */\n      _py2js_update: null,\n\n      /**\n       * @typedef {null|Object} Py2JsAnimateMsg\n       * @property {Object} style_data\n       *  Style data as accepted by Plotly.animate\n       * @property {Object} layout_data\n       *  Layout data as accepted by Plotly.animate\n       * @property {Array.<Number>} style_traces\n       *  Array of indexes of the traces that the animate operation applies\n       *  to, or null to apply the operation to all traces\n       * @property {Object} animation_opts\n       *  Animation options as accepted by Plotly.animate\n       * @property {Number} trace_edit_id\n       *  Edit ID to use when returning trace deltas using\n       *  the _js2py_traceDeltas message\n       * @property {Number} layout_edit_id\n       *  Edit ID to use when returning layout deltas using\n       *  the _js2py_layoutDelta message\n       * @property {null|String} source_view_id\n       *  view_id of the FigureView that triggered the original animate\n       *  event (e.g. by clicking a button), or null if the update was\n       *  triggered from Python\n       */\n      _py2js_animate: null,\n\n      /**\n       * @typedef {null|Object} Py2JsRemoveLayoutPropsMsg\n       * @property {Array.<Array.<String|Number>>} remove_props\n       *  Array of property paths to remove. Each propery path is an\n       *  array of property names or array indexes that locate a property\n       *  inside the _layout object\n       */\n      _py2js_removeLayoutProps: null,\n\n      /**\n       * @typedef {null|Object} Py2JsRemoveTracePropsMsg\n       * @property {Number} remove_trace\n       *  The index of the trace from which to remove properties\n       * @property {Array.<Array.<String|Number>>} remove_props\n       *  Array of property paths to remove. Each propery path is an\n       *  array of property names or array indexes that locate a property\n       *  inside the _data[remove_trace] object\n       */\n      _py2js_removeTraceProps: null,\n\n      // JS -> Python messages\n      // ---------------------\n      // Messages are sent by the JavaScript side by assigning the\n      // message contents to the appropriate _js2py_* property and then\n      // calling the `touch` method on the view that triggered the\n      // change. e.g. (where this is a FigureView):\n      //\n      //      this.model.set('_js2py_restyle', data);\n      //      this.touch();\n      //\n      // The Python side is responsible for setting the property to None\n      // after receiving the message.\n      //\n      // Message trigger logic is described in the corresponding\n      // handle_plotly_* methods of FigureView\n\n      /**\n       * @typedef {null|Object} Js2PyRestyleMsg\n       * @property {Object} style_data\n       *  Style data that was passed to Plotly.restyle\n       * @property {Array.<Number>} style_traces\n       *  Array of indexes of the traces that the restyle operation\n       *  was applied to, or null if applied to all traces\n       * @property {String} source_view_id\n       *  view_id of the FigureView that triggered the original restyle\n       *  event (e.g. by clicking the legend)\n       */\n      _js2py_restyle: null,\n\n      /**\n       * @typedef {null|Object} Js2PyRelayoutMsg\n       * @property {Object} relayout_data\n       *  Relayout data that was passed to Plotly.relayout\n       * @property {String} source_view_id\n       *  view_id of the FigureView that triggered the original relayout\n       *  event (e.g. by clicking the zoom button)\n       */\n      _js2py_relayout: null,\n\n      /**\n       * @typedef {null|Object} Js2PyUpdateMsg\n       * @property {Object} style_data\n       *  Style data that was passed to Plotly.update\n       * @property {Object} layout_data\n       *  Layout data that was passed to Plotly.update\n       * @property {Array.<Number>} style_traces\n       *  Array of indexes of the traces that the update operation applied\n       *  to, or null if applied to all traces\n       * @property {String} source_view_id\n       *  view_id of the FigureView that triggered the original relayout\n       *  event (e.g. by clicking the zoom button)\n       */\n      _js2py_update: null,\n\n      /**\n       * @typedef {null|Object} Js2PyLayoutDeltaMsg\n       * @property {Object} layout_delta\n       *  The layout delta object that contains all of the properties of\n       *  _fullLayout that are not identical to those in the\n       *  FigureModel's _layout property\n       * @property {Number} layout_edit_id\n       *  Edit ID of message that triggered the creation of layout delta\n       */\n      _js2py_layoutDelta: null,\n\n      /**\n       * @typedef {null|Object} Js2PyTraceDeltasMsg\n       * @property {Array.<Object>} trace_deltas\n       *  Array of trace delta objects. Each trace delta contains the\n       *  trace's uid along with all of the properties of _fullData that\n       *  are not identical to those in the FigureModel's _data property\n       * @property {Number} trace_edit_id\n       *  Edit ID of message that triggered the creation of trace deltas\n       */\n      _js2py_traceDeltas: null,\n\n      /**\n       * Object representing a collection of points for use in click, hover,\n       * and selection events\n       * @typedef {Object} Points\n       * @property {Array.<Number>} trace_indexes\n       *  Array of the trace index for each point\n       * @property {Array.<Number>} point_indexes\n       *  Array of the index of each point in its own trace\n       * @property {null|Array.<Number>} xs\n       *  Array of the x coordinate of each point (for cartesian trace types)\n       *  or null (for non-cartesian trace types)\n       * @property {null|Array.<Number>} ys\n       *  Array of the y coordinate of each point (for cartesian trace types)\n       *  or null (for non-cartesian trace types\n       * @property {null|Array.<Number>} zs\n       *  Array of the z coordinate of each point (for 3D cartesian\n       *  trace types)\n       *  or null (for non-3D-cartesian trace types)\n       */\n\n      /**\n       * Object representing the state of the input devices during a\n       * plotly event\n       * @typedef {Object} InputDeviceState\n       * @property {boolean} alt - true if alt key pressed,\n       * false otherwise\n       * @property {boolean} ctrl - true if ctrl key pressed,\n       * false otherwise\n       * @property {boolean} meta - true if meta key pressed,\n       * false otherwise\n       * @property {boolean} shift - true if shift key pressed,\n       * false otherwise\n       *\n       * @property {boolean} button\n       *  Indicates which button was pressed on the mouse to trigger the\n       *  event.\n       *    0: Main button pressed, usually the left button or the\n       *       un-initialized state\n       *    1: Auxiliary button pressed, usually the wheel button or\n       *       the middle button (if present)\n       *    2: Secondary button pressed, usually the right button\n       *    3: Fourth button, typically the Browser Back button\n       *    4: Fifth button, typically the Browser Forward button\n       *\n       * @property {boolean} buttons\n       *  Indicates which buttons were pressed on the mouse when the event\n       *  is triggered.\n       *    0  : No button or un-initialized\n       *    1  : Primary button (usually left)\n       *    2  : Secondary button (usually right)\n       *    4  : Auxilary button (usually middle or mouse wheel button)\n       *    8  : 4th button (typically the \"Browser Back\" button)\n       *    16 : 5th button (typically the \"Browser Forward\" button)\n       *\n       *  Combinations of buttons are represented by the sum of the codes\n       *  above. e.g. a value of 7 indicates buttons 1 (primary),\n       *  2 (secondary), and 4 (auxilary) were pressed during the event\n       */\n\n      /**\n       * @typedef {Object} BoxSelectorState\n       * @property {Array.<Number>} xrange\n       *  Two element array containing the x-range of the box selection\n       * @property {Array.<Number>} yrange\n       *  Two element array containing the y-range of the box selection\n       */\n\n      /**\n       * @typedef {Object} LassoSelectorState\n       * @property {Array.<Number>} xs\n       *  Array of the x-coordinates of the lasso selection region\n       * @property {Array.<Number>} ys\n       *  Array of the y-coordinates of the lasso selection region\n       */\n\n      /**\n       * Object representing the state of the selection tool during a\n       * plotly_select event\n       * @typedef {Object} Selector\n       * @property {String} type\n       *  Selection type. One of: 'box', or 'lasso'\n       * @property {BoxSelectorState|LassoSelectorState} selector_state\n       */\n\n      /**\n       * @typedef {null|Object} Js2PyPointsCallbackMsg\n       * @property {string} event_type\n       *  Name of the triggering event. One of 'plotly_click',\n       *  'plotly_hover', 'plotly_unhover', or 'plotly_selected'\n       * @property {null|Points} points\n       *  Points object for event\n       * @property {null|InputDeviceState} device_state\n       *  InputDeviceState object for event\n       * @property {null|Selector} selector\n       *  State of the selection tool for 'plotly_selected' events, null\n       *  for other event types\n       */\n      _js2py_pointsCallback: null,\n\n      // Message tracking\n      // ----------------\n      /**\n       * @type {Number}\n       * layout_edit_id of the last layout modification operation\n       * requested by the Python side\n       */\n      _last_layout_edit_id: 0,\n\n      /**\n       * @type {Number}\n       * trace_edit_id of the last trace modification operation\n       * requested by the Python side\n       */\n      _last_trace_edit_id: 0,\n    };\n  }\n\n  /**\n   * Initialize FigureModel. Called when the Python FigureWidget is first\n   * constructed\n   */\n  initialize() {\n    this.model.on(\"change:_data\", () => this.do_data());\n    this.model.on(\"change:_layout\", () => this.do_layout());\n    this.model.on(\"change:_py2js_addTraces\", () => this.do_addTraces());\n    this.model.on(\"change:_py2js_deleteTraces\", () => this.do_deleteTraces());\n    this.model.on(\"change:_py2js_moveTraces\", () => this.do_moveTraces());\n    this.model.on(\"change:_py2js_restyle\", () => this.do_restyle());\n    this.model.on(\"change:_py2js_relayout\", () => this.do_relayout());\n    this.model.on(\"change:_py2js_update\", () => this.do_update());\n    this.model.on(\"change:_py2js_animate\", () => this.do_animate());\n    this.model.on(\"change:_py2js_removeLayoutProps\", () => this.do_removeLayoutProps());\n    this.model.on(\"change:_py2js_removeTraceProps\", () => this.do_removeTraceProps());\n  }\n\n  /**\n   * Input a trace index specification and return an Array of trace\n   * indexes where:\n   *\n   *  - null|undefined -> Array of all traces\n   *  - Trace index as Number -> Single element array of input index\n   *  - Array of trace indexes -> Input array unchanged\n   *\n   * @param {undefined|null|Number|Array.<Number>} trace_indexes\n   * @returns {Array.<Number>}\n   *  Array of trace indexes\n   * @private\n   */\n  _normalize_trace_indexes(trace_indexes?: null | number | number[]): number[] {\n    if (trace_indexes === null || trace_indexes === undefined) {\n      var numTraces = this.model.get(\"_data\").length;\n      trace_indexes = _.range(numTraces);\n    }\n    if (trace_indexes !== undefined && trace_indexes !== null && !Array.isArray(trace_indexes)) {\n      // Make sure idx is an array\n      trace_indexes = [trace_indexes];\n    }\n    return trace_indexes ?? [];\n  }\n\n  /**\n   * Log changes to the _data trait\n   *\n   * This should only happed on FigureModel initialization\n   */\n  do_data() {}\n\n  /**\n   * Log changes to the _layout trait\n   *\n   * This should only happed on FigureModel initialization\n   */\n  do_layout() {}\n\n  /**\n   * Handle addTraces message\n   */\n  do_addTraces() {\n    // add trace to plot\n    /** @type {Py2JsAddTracesMsg} */\n    var msgData: Py2JsAddTracesMsg = this.model.get(\"_py2js_addTraces\");\n\n    if (msgData !== null) {\n      var currentTraces = this.model.get(\"_data\");\n      var newTraces = msgData.trace_data;\n      _.forEach(newTraces, function (newTrace: any) {\n        currentTraces.push(newTrace);\n      });\n    }\n  }\n\n  /**\n   * Handle deleteTraces message\n   */\n  do_deleteTraces() {\n    // remove traces from plot\n\n    /** @type {Py2JsDeleteTracesMsg} */\n    var msgData: Py2JsDeleteTracesMsg = this.model.get(\"_py2js_deleteTraces\");\n\n    if (msgData !== null) {\n      var delete_inds = msgData.delete_inds;\n      var tracesData = this.model.get(\"_data\");\n\n      // Remove del inds in reverse order so indexes remain valid\n      // throughout loop\n      delete_inds\n        .slice()\n        .reverse()\n        .forEach(function (del_ind) {\n          tracesData.splice(del_ind, 1);\n        });\n    }\n  }\n\n  /**\n   * Handle moveTraces message\n   */\n  do_moveTraces() {\n    /** @type {Py2JsMoveTracesMsg} */\n    var msgData: Py2JsMoveTracesMsg = this.model.get(\"_py2js_moveTraces\");\n\n    if (msgData !== null) {\n      var tracesData = this.model.get(\"_data\");\n      var currentInds = msgData.current_trace_inds;\n      var newInds = msgData.new_trace_inds;\n\n      performMoveTracesLike(tracesData, currentInds, newInds);\n    }\n  }\n\n  /**\n   * Handle restyle message\n   */\n  do_restyle() {\n    /** @type {Py2JsRestyleMsg} */\n    var msgData: Py2JsRestyleMsg = this.model.get(\"_py2js_restyle\");\n    if (msgData !== null) {\n      var restyleData = msgData.restyle_data;\n      var restyleTraces = this._normalize_trace_indexes(msgData.restyle_traces);\n      performRestyleLike(this.model.get(\"_data\"), restyleData, restyleTraces);\n    }\n  }\n\n  /**\n   * Handle relayout message\n   */\n  do_relayout() {\n    /** @type {Py2JsRelayoutMsg} */\n    var msgData: Py2JsRelayoutMsg = this.model.get(\"_py2js_relayout\");\n\n    if (msgData !== null) {\n      performRelayoutLike(this.model.get(\"_layout\"), msgData.relayout_data);\n    }\n  }\n\n  /**\n   * Handle update message\n   */\n  do_update() {\n    /** @type {Py2JsUpdateMsg} */\n    var msgData: Py2JsUpdateMsg = this.model.get(\"_py2js_update\");\n\n    if (msgData !== null) {\n      var style = msgData.style_data;\n      var layout = msgData.layout_data;\n      var styleTraces = this._normalize_trace_indexes(msgData.style_traces);\n      performRestyleLike(this.model.get(\"_data\"), style, styleTraces);\n      performRelayoutLike(this.model.get(\"_layout\"), layout);\n    }\n  }\n\n  /**\n   * Handle animate message\n   */\n  do_animate() {\n    /** @type {Py2JsAnimateMsg} */\n    var msgData: Py2JsAnimateMsg = this.model.get(\"_py2js_animate\");\n    if (msgData !== null) {\n      var styles = msgData.style_data;\n      var layout = msgData.layout_data;\n      var trace_indexes = this._normalize_trace_indexes(msgData.style_traces);\n\n      for (var i = 0; i < styles.length; i++) {\n        var style = styles[i];\n        var trace_index = trace_indexes[i];\n        var trace = this.model.get(\"_data\")[trace_index];\n        performRelayoutLike(trace, style);\n      }\n\n      performRelayoutLike(this.model.get(\"_layout\"), layout);\n    }\n  }\n\n  /**\n   * Handle removeLayoutProps message\n   */\n  do_removeLayoutProps() {\n    /** @type {Py2JsRemoveLayoutPropsMsg} */\n    var msgData: Py2JsRemoveLayoutPropsMsg = this.model.get(\n      \"_py2js_removeLayoutProps\"\n    );\n\n    if (msgData !== null) {\n      var keyPaths = msgData.remove_props;\n      var layout = this.model.get(\"_layout\");\n      performRemoveProps(layout, keyPaths);\n    }\n  }\n\n  /**\n   * Handle removeTraceProps message\n   */\n  do_removeTraceProps() {\n    /** @type {Py2JsRemoveTracePropsMsg} */\n    var msgData: Py2JsRemoveTracePropsMsg = this.model.get(\"_py2js_removeTraceProps\");\n    if (msgData !== null) {\n      var keyPaths = msgData.remove_props;\n      var traceIndex = msgData.remove_trace;\n      var trace = this.model.get(\"_data\")[traceIndex];\n\n      performRemoveProps(trace, keyPaths);\n    }\n  }\n}\n\nconst serializers: Record<string, Serializer> = {\n  _data: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _layout: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_addTraces: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_deleteTraces: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_moveTraces: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_restyle: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_relayout: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_update: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_animate: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_removeLayoutProps: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _py2js_removeTraceProps: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_restyle: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_relayout: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_update: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_layoutDelta: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_traceDeltas: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n  _js2py_pointsCallback: {\n    deserialize: py2js_deserializer,\n    serialize: js2py_serializer,\n  },\n};\n\n// View\n// ====\n/**\n * A FigureView manages the visual presentation of a single Plotly.js\n * figure for a single notebook output cell. Each FigureView has a\n * reference to FigureModel.  Multiple views may share a single model\n * instance, as is the case when a Python FigureWidget is displayed in\n * multiple notebook output cells.\n *\n * @type {widgets.DOMWidgetView}\n */\nexport class FigureView {\n  viewID: string = '';\n  resizeEventListener: () => void = () => {};\n\n  model: FigureModel;\n  el: HTMLElement;\n\n  constructor(model: FigureModel, el: HTMLElement) {\n    this.model = model;\n    this.el = el;\n  }\n\n  /**\n   * The perform_render method is called by processLuminoMessage\n   * after the widget's DOM element has been attached to the notebook\n   * output cell. This happens after the initialize of the\n   * FigureModel, and it won't happen at all if the Python FigureWidget\n   * is never displayed in a notebook output cell\n   */\n  perform_render() {\n    var that = this;\n\n    // Wire up message property callbacks\n    // ----------------------------------\n    // Python -> JS event properties\n    this.model.on(\"change:_py2js_addTraces\", () => this.do_addTraces());\n    this.model.on(\"change:_py2js_deleteTraces\", () => this.do_deleteTraces());\n    this.model.on(\"change:_py2js_moveTraces\", () => this.do_moveTraces());\n    this.model.on(\"change:_py2js_restyle\", () => this.do_restyle());\n    this.model.on(\"change:_py2js_relayout\", () => this.do_relayout());\n    this.model.on(\"change:_py2js_update\", () => this.do_update());\n    this.model.on(\"change:_py2js_animate\", () => this.do_animate());\n\n    // MathJax v2 configuration\n    // ---------------------\n    (window as any)?.MathJax?.Hub?.Config?.({ SVG: { font: \"STIX-Web\" } });\n\n    // Get message ids\n    // ---------------------\n    var layout_edit_id = this.model.get(\"_last_layout_edit_id\");\n    var trace_edit_id = this.model.get(\"_last_trace_edit_id\");\n\n    // Set view UID\n    // ------------\n    this.viewID = randstr();\n\n    // Initialize Plotly.js figure\n    // ---------------------------\n    // We must clone the model's data and layout properties so that\n    // the model is not directly mutated by the Plotly.js library.\n    var initialTraces = _.cloneDeep(this.model.get(\"_data\"));\n    var initialLayout = _.cloneDeep(this.model.get(\"_layout\"));\n    if (!initialLayout.height) {\n      initialLayout.height = 360;\n    }\n    var config = this.model.get(\"_config\");\n    config.editSelection = false;\n\n    Plotly.newPlot(that.el, initialTraces, initialLayout, config).then(\n      function () {\n        // ### Send trace deltas ###\n        // We create an array of deltas corresponding to the new\n        // traces.\n        that._sendTraceDeltas(trace_edit_id);\n\n        // ### Send layout delta ###\n        that._sendLayoutDelta(layout_edit_id);\n\n        // Wire up plotly event callbacks\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_restyle\", function (update: any) {\n          that.handle_plotly_restyle(update);\n        });\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_relayout\", function (update: any) {\n          that.handle_plotly_relayout(update);\n        });\n        // (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_update\", function (update: any) {\n        //   that.handle_plotly_update(update);\n        // });\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_click\", function (update: any) {\n          that.handle_plotly_click(update);\n        });\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_hover\", function (update: any) {\n          that.handle_plotly_hover(update);\n        });\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_unhover\", function (update: any) {\n          that.handle_plotly_unhover(update);\n        });\n        (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_selected\", function (update: any) {\n          that.handle_plotly_selected(update);\n        });\n        // (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_deselect\", function (update: any) {\n        //   that.handle_plotly_deselect(update);\n        // });\n        // (<Plotly.PlotlyHTMLElement>that.el).on(\"plotly_doubleclick\", function (update: any) {\n        //   that.handle_plotly_doubleclick(update);\n        // });\n\n        // Emit event indicating that the widget has finished\n        // rendering\n        var event = new CustomEvent(\"plotlywidget-after-render\", {\n          detail: { element: that.el, viewID: that.viewID },\n        });\n\n        // Dispatch/Trigger/Fire the event\n        document.dispatchEvent(event);\n      }\n    );\n  }\n\n  /**\n   * Respond to Lumino events\n   */\n  _processLuminoMessage(msg: any, _super: any) {\n    _super.apply(this, arguments);\n    var that = this;\n    switch (msg.type) {\n      case \"before-attach\":\n        // Render an initial empty figure. This establishes with\n        // the page that the element will not be empty, avoiding\n        // some occasions where the dynamic sizing behavior leads\n        // to collapsed figure dimensions.\n        var axisHidden = {\n          showgrid: false,\n          showline: false,\n          tickvals: [] as any[],\n        };\n\n        Plotly.newPlot(that.el, [], {\n          xaxis: axisHidden,\n          yaxis: axisHidden,\n        });\n        this.resizeEventListener = () => {\n          this.autosizeFigure();\n        }\n        window.addEventListener(\"resize\", this.resizeEventListener);\n        break;\n      case \"after-attach\":\n        // Rendering actual figure in the after-attach event allows\n        // Plotly.js to size the figure to fill the available element\n        this.perform_render();\n        break;\n      case \"after-show\":\n      case \"resize\":\n        this.autosizeFigure();\n        break;\n    }\n  }\n\n  // processPhosphorMessage(msg: any) {\n  //   this._processLuminoMessage(msg, super[\"processPhosphorMessage\"]);\n  // }\n\n  // processLuminoMessage(msg: any) {\n  //   this._processLuminoMessage(msg, super[\"processLuminoMessage\"]);\n  // }\n\n  autosizeFigure() {\n    var that = this;\n    var layout = that.model.get(\"_layout\");\n    if (_.isNil(layout) || _.isNil(layout.width)) {\n      // @ts-ignore\n      Plotly.Plots.resize(that.el).then(function () {\n        var layout_edit_id = that.model.get(\"_last_layout_edit_id\");\n        that._sendLayoutDelta(layout_edit_id);\n      });\n    }\n  }\n\n  /**\n   * Purge Plotly.js data structures from the notebook output display\n   * element when the view is destroyed\n   */\n  remove() {\n    Plotly.purge(this.el);\n    window.removeEventListener(\"resize\", this.resizeEventListener);\n  }\n\n  /**\n   * Return the figure's _fullData array merged with its data array\n   *\n   * The merge ensures that for any properties that el._fullData and\n   * el.data have in common, we return the version from el.data\n   *\n   * Named colorscales are one example of why this is needed. The el.data\n   * array will hold named colorscale strings (e.g. 'Viridis'), while the\n   * el._fullData array will hold the actual colorscale array. e.g.\n   *\n   *      el.data[0].marker.colorscale == 'Viridis' but\n   *      el._fullData[0].marker.colorscale = [[..., ...], ...]\n   *\n   * Performing the merge allows our FigureModel to retain the 'Viridis'\n   * string, rather than having it overridded by the colorscale array.\n   *\n   */\n  getFullData() {\n    return (<Plotly.PlotlyHTMLElement>this.el).dataset;\n    // return _.mergeWith(\n    //   {},\n    //   (<Plotly.PlotlyHTMLElement>this.el)._fullData,\n    //   (<Plotly.PlotlyHTMLElement>this.el).data,\n    //   fullMergeCustomizer\n    // );\n  }\n\n  /**\n   * Return the figure's _fullLayout object merged with its layout object\n   *\n   * See getFullData documentation for discussion of why the merge is\n   * necessary\n   */\n  getFullLayout() {\n    return {};\n    // return _.mergeWith(\n    //   {},\n    //   (<Plotly.PlotlyHTMLElement>this.el)._fullLayout,\n    //   (<Plotly.PlotlyHTMLElement>this.el).lay,\n    //   fullMergeCustomizer\n    // );\n  }\n\n  /**\n   * Build Points data structure from data supplied by the plotly_click,\n   * plotly_hover, or plotly_select events\n   * @param {Object} data\n   * @returns {null|Points}\n   */\n  buildPointsObject(data: any): null | Points {\n    var pointsObject: Points;\n    if (data.hasOwnProperty(\"points\")) {\n      // Most cartesian plots\n      var pointObjects = data[\"points\"];\n      var numPoints = pointObjects.length;\n\n      var hasNestedPointObjects = true;\n      for (let i = 0; i < numPoints; i++) {\n        hasNestedPointObjects =\n          hasNestedPointObjects &&\n          pointObjects[i].hasOwnProperty(\"pointNumbers\");\n        if (!hasNestedPointObjects) break;\n      }\n      var numPointNumbers = numPoints;\n      if (hasNestedPointObjects) {\n        numPointNumbers = 0;\n        for (let i = 0; i < numPoints; i++) {\n          numPointNumbers += pointObjects[i][\"pointNumbers\"].length;\n        }\n      }\n      pointsObject = {\n        trace_indexes: new Array(numPointNumbers),\n        point_indexes: new Array(numPointNumbers),\n        xs: new Array(numPointNumbers),\n        ys: new Array(numPointNumbers),\n      };\n\n      if (hasNestedPointObjects) {\n        var flatPointIndex = 0;\n        for (var p = 0; p < numPoints; p++) {\n          for (\n            let i = 0;\n            i < pointObjects[p][\"pointNumbers\"].length;\n            i++, flatPointIndex++\n          ) {\n            pointsObject[\"point_indexes\"][flatPointIndex] =\n              pointObjects[p][\"pointNumbers\"][i];\n            // also add xs, ys and traces so that the array doesn't get truncated later\n            pointsObject[\"xs\"][flatPointIndex] = pointObjects[p][\"x\"];\n            pointsObject[\"ys\"][flatPointIndex] = pointObjects[p][\"y\"];\n            pointsObject[\"trace_indexes\"][flatPointIndex] =\n              pointObjects[p][\"curveNumber\"];\n          }\n        }\n\n        let single_trace = true;\n        for (let i = 1; i < numPointNumbers; i++) {\n          single_trace = single_trace && (pointsObject[\"trace_indexes\"][i - 1] === pointsObject[\"trace_indexes\"][i])\n          if (!single_trace) break;\n        }\n        if (single_trace) {\n          pointsObject[\"point_indexes\"].sort((function (a, b) {\n            return a - b\n          }))\n        }\n\n      } else {\n        for (var p = 0; p < numPoints; p++) {\n          pointsObject[\"trace_indexes\"][p] = pointObjects[p][\"curveNumber\"];\n          pointsObject[\"point_indexes\"][p] = pointObjects[p][\"pointNumber\"];\n          pointsObject[\"xs\"][p] = pointObjects[p][\"x\"];\n          pointsObject[\"ys\"][p] = pointObjects[p][\"y\"];\n        }\n      }\n\n      // Add z if present\n      var hasZ =\n        pointObjects[0] !== undefined && pointObjects[0].hasOwnProperty(\"z\");\n      if (hasZ) {\n        pointsObject[\"zs\"] = new Array(numPoints);\n        for (p = 0; p < numPoints; p++) {\n          pointsObject[\"zs\"][p] = pointObjects[p][\"z\"];\n        }\n      }\n\n      return pointsObject;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Build InputDeviceState data structure from data supplied by the\n   * plotly_click, plotly_hover, or plotly_select events\n   * @param {Object} data\n   * @returns {null|InputDeviceState}\n   */\n  buildInputDeviceStateObject(data: any): null | InputDeviceState {\n    var event = data[\"event\"];\n    if (event === undefined) {\n      return null;\n    } else {\n      /** @type {InputDeviceState} */\n      var inputDeviceState: InputDeviceState = {\n        // Keyboard modifiers\n        alt: event[\"altKey\"],\n        ctrl: event[\"ctrlKey\"],\n        meta: event[\"metaKey\"],\n        shift: event[\"shiftKey\"],\n\n        // Mouse buttons\n        button: event[\"button\"],\n        buttons: event[\"buttons\"],\n      };\n      return inputDeviceState;\n    }\n  }\n\n  /**\n   * Build Selector data structure from data supplied by the\n   * plotly_select event\n   * @param data\n   * @returns {null|Selector}\n   */\n  buildSelectorObject(data: any): null | Selector {\n    var selectorObject: Selector | null;\n\n    if (data.hasOwnProperty(\"range\")) {\n      // Box selection\n      selectorObject = {\n        type: \"box\",\n        selector_state: {\n          xrange: data[\"range\"][\"x\"],\n          yrange: data[\"range\"][\"y\"],\n        },\n      };\n    } else if (data.hasOwnProperty(\"lassoPoints\")) {\n      // Lasso selection\n      selectorObject = {\n        type: \"lasso\",\n        selector_state: {\n          xs: data[\"lassoPoints\"][\"x\"],\n          ys: data[\"lassoPoints\"][\"y\"],\n        },\n      };\n    } else {\n      selectorObject = null;\n    }\n    return selectorObject;\n  }\n\n  /**\n   * Handle ploty_restyle events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_restyle(data: any) {\n    if (data === null || data === undefined) {\n      // No data to report to the Python side\n      return;\n    }\n\n    if (data[0] && data[0].hasOwnProperty(\"_doNotReportToPy\")) {\n      // Restyle originated on the Python side\n      return;\n    }\n\n    // Unpack data\n    var styleData = data[0];\n    var styleTraces = data[1];\n\n    // Construct restyle message to send to the Python side\n    /** @type {Js2PyRestyleMsg} */\n    var restyleMsg: Js2PyRestyleMsg = {\n      style_data: styleData,\n      style_traces: styleTraces,\n      source_view_id: this.viewID,\n    };\n\n    this.model.set(\"_js2py_restyle\", restyleMsg);\n    this.touch();\n  }\n\n  touch() {\n    this.model.save_changes();\n  }\n\n  /**\n   * Handle plotly_relayout events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_relayout(data: any) {\n    if (data === null || data === undefined) {\n      // No data to report to the Python side\n      return;\n    }\n\n    if (data.hasOwnProperty(\"_doNotReportToPy\")) {\n      // Relayout originated on the Python side\n      return;\n    }\n\n    /** @type {Js2PyRelayoutMsg} */\n    var relayoutMsg: Js2PyRelayoutMsg = {\n      relayout_data: data,\n      source_view_id: this.viewID,\n    };\n\n    this.model.set(\"_js2py_relayout\", relayoutMsg);\n    this.touch();\n  }\n\n  /**\n   * Handle plotly_update events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_update(data: any) {\n    if (data === null || data === undefined) {\n      // No data to report to the Python side\n      return;\n    }\n\n    if (data[\"data\"] && data[\"data\"][0].hasOwnProperty(\"_doNotReportToPy\")) {\n      // Update originated on the Python side\n      return;\n    }\n\n    /** @type {Js2PyUpdateMsg} */\n    var updateMsg: Js2PyUpdateMsg = {\n      style_data: data[\"data\"][0],\n      style_traces: data[\"data\"][1],\n      layout_data: data[\"layout\"],\n      source_view_id: this.viewID,\n    };\n\n    // Log message\n    this.model.set(\"_js2py_update\", updateMsg);\n    this.touch();\n  }\n\n  /**\n   * Handle plotly_click events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_click(data: any) {\n    this._send_points_callback_message(data, \"plotly_click\");\n  }\n\n  /**\n   * Handle plotly_hover events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_hover(data: any) {\n    this._send_points_callback_message(data, \"plotly_hover\");\n  }\n\n  /**\n   * Handle plotly_unhover events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_unhover(data: any) {\n    this._send_points_callback_message(data, \"plotly_unhover\");\n  }\n\n  /**\n   * Handle plotly_selected events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_selected(data: any) {\n    this._send_points_callback_message(data, \"plotly_selected\");\n  }\n\n  /**\n   * Handle plotly_deselect events emitted by the Plotly.js library\n   * @param data\n   */\n  handle_plotly_deselect(data: any) {\n    data = {\n      points: [],\n    };\n    this._send_points_callback_message(data, \"plotly_deselect\");\n  }\n\n  /**\n   * Build and send a points callback message to the Python side\n   *\n   * @param {Object} data\n   *  data object as provided by the plotly_click, plotly_hover,\n   *  plotly_unhover, or plotly_selected events\n   * @param {String} event_type\n   *  Name of the triggering event. One of 'plotly_click',\n   *  'plotly_hover', 'plotly_unhover', or 'plotly_selected'\n   * @private\n   */\n  _send_points_callback_message(data: any, event_type: string) {\n    if (data === null || data === undefined) {\n      // No data to report to the Python side\n      return;\n    }\n\n    /** @type {Js2PyPointsCallbackMsg} */\n    var pointsMsg: Js2PyPointsCallbackMsg = {\n      event_type: event_type,\n      points: this.buildPointsObject(data),\n      device_state: this.buildInputDeviceStateObject(data),\n      selector: this.buildSelectorObject(data),\n    };\n\n    if (pointsMsg[\"points\"] !== null && pointsMsg[\"points\"] !== undefined) {\n      this.model.set(\"_js2py_pointsCallback\", pointsMsg);\n      this.touch();\n    }\n  }\n\n  /**\n   * Stub for future handling of plotly_doubleclick\n   * @param data\n   */\n  handle_plotly_doubleclick(data: any) {}\n\n  /**\n   * Handle Plotly.addTraces request\n   */\n  do_addTraces() {\n    /** @type {Py2JsAddTracesMsg} */\n    var msgData: Py2JsAddTracesMsg = this.model.get(\"_py2js_addTraces\");\n\n    if (msgData !== null) {\n      var that = this;\n      Plotly.addTraces(this.el, msgData.trace_data).then(function () {\n        // ### Send trace deltas ###\n        that._sendTraceDeltas(msgData.trace_edit_id);\n\n        // ### Send layout delta ###\n        var layout_edit_id = msgData.layout_edit_id;\n        that._sendLayoutDelta(layout_edit_id);\n      });\n    }\n  }\n\n  /**\n   * Handle Plotly.deleteTraces request\n   */\n  do_deleteTraces() {\n    /** @type {Py2JsDeleteTracesMsg} */\n    var msgData: Py2JsDeleteTracesMsg = this.model.get(\"_py2js_deleteTraces\");\n\n    if (msgData !== null) {\n      var delete_inds = msgData.delete_inds;\n      var that = this;\n      Plotly.deleteTraces(this.el, delete_inds).then(function () {\n        // ### Send trace deltas ###\n        var trace_edit_id = msgData.trace_edit_id;\n        that._sendTraceDeltas(trace_edit_id);\n\n        // ### Send layout delta ###\n        var layout_edit_id = msgData.layout_edit_id;\n        that._sendLayoutDelta(layout_edit_id);\n      });\n    }\n  }\n\n  /**\n   * Handle Plotly.moveTraces request\n   */\n  do_moveTraces() {\n    /** @type {Py2JsMoveTracesMsg} */\n    var msgData: Py2JsMoveTracesMsg = this.model.get(\"_py2js_moveTraces\");\n\n    if (msgData !== null) {\n      // Unpack message\n      var currentInds = msgData.current_trace_inds;\n      var newInds = msgData.new_trace_inds;\n\n      // Check if the new trace indexes are actually different than\n      // the current indexes\n      var inds_equal = _.isEqual(currentInds, newInds);\n\n      if (!inds_equal) {\n        Plotly.moveTraces(this.el, currentInds, newInds);\n      }\n    }\n  }\n\n  /**\n   * Handle Plotly.restyle request\n   */\n  do_restyle() {\n    /** @type {Py2JsRestyleMsg} */\n    var msgData: Py2JsRestyleMsg = this.model.get(\"_py2js_restyle\");\n    if (msgData !== null) {\n      var restyleData = msgData.restyle_data;\n      var traceIndexes = (this.model as FigureModel)._normalize_trace_indexes(\n        msgData.restyle_traces\n      );\n\n      restyleData[\"_doNotReportToPy\"] = true;\n      Plotly.restyle(this.el, restyleData, traceIndexes);\n\n      // ### Send trace deltas ###\n      // We create an array of deltas corresponding to the restyled\n      // traces.\n      this._sendTraceDeltas(msgData.trace_edit_id);\n\n      // ### Send layout delta ###\n      var layout_edit_id = msgData.layout_edit_id;\n      this._sendLayoutDelta(layout_edit_id);\n    }\n  }\n\n  /**\n   * Handle Plotly.relayout request\n   */\n  do_relayout() {\n    /** @type {Py2JsRelayoutMsg} */\n    var msgData: Py2JsRelayoutMsg = this.model.get(\"_py2js_relayout\");\n    if (msgData !== null) {\n      if (msgData.source_view_id !== this.viewID) {\n        var relayoutData = msgData.relayout_data;\n        relayoutData[\"_doNotReportToPy\"] = true;\n        Plotly.relayout(this.el, msgData.relayout_data);\n      }\n\n      // ### Send layout delta ###\n      var layout_edit_id = msgData.layout_edit_id;\n      this._sendLayoutDelta(layout_edit_id);\n    }\n  }\n\n  /**\n   * Handle Plotly.update request\n   */\n  do_update() {\n    /** @type {Py2JsUpdateMsg} */\n    var msgData: Py2JsUpdateMsg = this.model.get(\"_py2js_update\");\n\n    if (msgData !== null) {\n      var style = msgData.style_data || {};\n      var layout = msgData.layout_data || {};\n      var traceIndexes = (this.model as FigureModel)._normalize_trace_indexes(\n        msgData.style_traces\n      );\n\n      style[\"_doNotReportToPy\"] = true;\n      Plotly.update(this.el, style, layout, traceIndexes);\n\n      // ### Send trace deltas ###\n      // We create an array of deltas corresponding to the updated\n      // traces.\n      this._sendTraceDeltas(msgData.trace_edit_id);\n\n      // ### Send layout delta ###\n      var layout_edit_id = msgData.layout_edit_id;\n      this._sendLayoutDelta(layout_edit_id);\n    }\n  }\n\n  /**\n   * Handle Plotly.animate request\n   */\n  do_animate() {\n    /** @type {Py2JsAnimateMsg} */\n    var msgData: Py2JsAnimateMsg = this.model.get(\"_py2js_animate\");\n\n    if (msgData !== null) {\n      // Unpack params\n      // var animationData = msgData[0];\n      var animationOpts = msgData.animation_opts;\n\n      var styles = msgData.style_data;\n      var layout = msgData.layout_data;\n      var traceIndexes = (this.model as FigureModel)._normalize_trace_indexes(\n        msgData.style_traces\n      );\n\n      var animationData: any = {\n        data: styles,\n        layout: layout,\n        traces: traceIndexes,\n      };\n\n      animationData[\"_doNotReportToPy\"] = true;\n      var that = this;\n\n      // @ts-ignore\n      Plotly.animate(this.el, animationData, animationOpts).then(function () {\n        // ### Send trace deltas ###\n        // We create an array of deltas corresponding to the\n        // animated traces.\n        that._sendTraceDeltas(msgData.trace_edit_id);\n\n        // ### Send layout delta ###\n        var layout_edit_id = msgData.layout_edit_id;\n        that._sendLayoutDelta(layout_edit_id);\n      });\n    }\n  }\n\n  /**\n   * Construct layout delta object and send layoutDelta message to the\n   * Python side\n   *\n   * @param layout_edit_id\n   *  Edit ID of message that triggered the creation of the layout delta\n   * @private\n   */\n  _sendLayoutDelta(layout_edit_id: any) {\n    // ### Handle layout delta ###\n    var layout_delta = createDeltaObject(\n      this.getFullLayout(),\n      this.model.get(\"_layout\")\n    );\n\n    /** @type{Js2PyLayoutDeltaMsg} */\n    var layoutDeltaMsg: Js2PyLayoutDeltaMsg = {\n      layout_delta: layout_delta,\n      layout_edit_id: layout_edit_id,\n    };\n\n    this.model.set(\"_js2py_layoutDelta\", layoutDeltaMsg);\n    this.touch();\n  }\n\n  /**\n   * Construct trace deltas array for the requested trace indexes and\n   * send traceDeltas message to the Python side\n   *  Array of indexes of traces for which to compute deltas\n   * @param trace_edit_id\n   *  Edit ID of message that triggered the creation of trace deltas\n   * @private\n   */\n  _sendTraceDeltas(trace_edit_id: any) {\n    var trace_data = this.model.get(\"_data\");\n    var traceIndexes = _.range(trace_data.length);\n    var trace_deltas = new Array(traceIndexes.length);\n\n    var fullData = this.getFullData();\n    for (var i = 0; i < traceIndexes.length; i++) {\n      var traceInd = traceIndexes[i];\n      trace_deltas[i] = createDeltaObject(\n        fullData[traceInd],\n        trace_data[traceInd]\n      );\n    }\n\n    /** @type{Js2PyTraceDeltasMsg} */\n    var traceDeltasMsg: Js2PyTraceDeltasMsg = {\n      trace_deltas: trace_deltas,\n      trace_edit_id: trace_edit_id,\n    };\n\n    this.model.set(\"_js2py_traceDeltas\", traceDeltasMsg);\n    this.touch();\n  }\n}\n\n// Serialization\n/**\n * Create a mapping from numpy dtype strings to corresponding typed array\n * constructors\n */\nconst numpy_dtype_to_typedarray_type = {\n  int8: Int8Array,\n  int16: Int16Array,\n  int32: Int32Array,\n  uint8: Uint8Array,\n  uint16: Uint16Array,\n  uint32: Uint32Array,\n  float32: Float32Array,\n  float64: Float64Array,\n};\n\nfunction serializeTypedArray(v: ArrayConstructor) {\n  var numpyType;\n  if (v instanceof Int8Array) {\n    numpyType = \"int8\";\n  } else if (v instanceof Int16Array) {\n    numpyType = \"int16\";\n  } else if (v instanceof Int32Array) {\n    numpyType = \"int32\";\n  } else if (v instanceof Uint8Array) {\n    numpyType = \"uint8\";\n  } else if (v instanceof Uint16Array) {\n    numpyType = \"uint16\";\n  } else if (v instanceof Uint32Array) {\n    numpyType = \"uint32\";\n  } else if (v instanceof Float32Array) {\n    numpyType = \"float32\";\n  } else if (v instanceof Float64Array) {\n    numpyType = \"float64\";\n  } else {\n    // Don't understand it, return as is\n    return v;\n  }\n  var res = {\n    dtype: numpyType,\n    shape: [v.length],\n    value: v.buffer,\n  };\n  return res;\n}\n\n/**\n * ipywidget JavaScript -> Python serializer\n */\nfunction js2py_serializer(v: any, widgetManager?: any) {\n  var res: any;\n\n  if (_.isTypedArray(v)) {\n    res = serializeTypedArray(v);\n  } else if (Array.isArray(v)) {\n    // Serialize array elements recursively\n    res = new Array(v.length);\n    for (var i = 0; i < v.length; i++) {\n      res[i] = js2py_serializer(v[i]);\n    }\n  } else if (_.isPlainObject(v)) {\n    // Serialize object properties recursively\n    res = {};\n    for (var p in v) {\n      if (v.hasOwnProperty(p)) {\n        res[p] = js2py_serializer(v[p]);\n      }\n    }\n  } else if (v === undefined) {\n    // Translate undefined into '_undefined_' sentinal string. The\n    // Python _js_to_py deserializer will convert this into an\n    // Undefined object\n    res = \"_undefined_\";\n  } else {\n    // Primitive value to transfer directly\n    res = v;\n  }\n  return res;\n}\n\n/**\n * ipywidget Python -> Javascript deserializer\n */\nfunction py2js_deserializer(v: any, widgetManager?: any) {\n  var res: any;\n\n  if (Array.isArray(v)) {\n    // Deserialize array elements recursively\n    res = new Array(v.length);\n    for (var i = 0; i < v.length; i++) {\n      res[i] = py2js_deserializer(v[i]);\n    }\n  } else if (_.isPlainObject(v)) {\n    if (\n      (_.has(v, \"value\") || _.has(v, \"buffer\")) &&\n      _.has(v, \"dtype\") &&\n      _.has(v, \"shape\")\n    ) {\n      // Deserialize special buffer/dtype/shape objects into typed arrays\n      // These objects correspond to numpy arrays on the Python side\n      //\n      // Note plotly.py<=3.1.1 called the buffer object `buffer`\n      // This was renamed `value` in 3.2 to work around a naming conflict\n      // when saving widget state to a notebook.\n      // @ts-ignore\n      var typedarray_type = numpy_dtype_to_typedarray_type[v.dtype];\n      var buffer = _.has(v, \"value\") ? v.value.buffer : (v as any).buffer.buffer;\n      res = new typedarray_type(buffer);\n    } else {\n      // Deserialize object properties recursively\n      res = {};\n      for (var p in (v as any)) {\n        if ((v as any).hasOwnProperty(p)) {\n          res[p] = py2js_deserializer(v[p]);\n        }\n      }\n    }\n  } else if (v === \"_undefined_\") {\n    // Convert the _undefined_ sentinal into undefined\n    res = undefined;\n  } else {\n    // Accept primitive value directly\n    res = v;\n  }\n  return res;\n}\n\n/**\n * Return whether the input value is a typed array\n * @param potentialTypedArray\n *  Value to examine\n * @returns {boolean}\n */\n// function isTypedArray(potentialTypedArray: any): boolean {\n//   return (\n//     ArrayBuffer.isView(potentialTypedArray) &&\n//     !(potentialTypedArray instanceof DataView)\n//   );\n// }\n\n/**\n * Customizer for use with lodash's mergeWith function\n *\n * The customizer ensures that typed arrays are not converted into standard\n * arrays during the recursive merge\n *\n * See: https://lodash.com/docs/latest#mergeWith\n */\n// function fullMergeCustomizer(objValue: any, srcValue: any, key: string) {\n//   if (key[0] === \"_\") {\n//     // Don't recurse into private properties\n//     return null;\n//   } else if (isTypedArray(srcValue)) {\n//     // Return typed arrays directly, don't recurse inside\n//     return srcValue;\n//   }\n// }\n\n/**\n * Reform a Plotly.relayout like operation on an input object\n *\n * @param {Object} parentObj\n *  The object that the relayout operation should be applied to\n * @param {Object} relayoutData\n *  An relayout object as accepted by Plotly.relayout\n *\n *  Examples:\n *      var d = {foo {bar [5, 10]}};\n *      performRelayoutLike(d, {'foo.bar': [0, 1]});\n *      d -> {foo: {bar: [0, 1]}}\n *\n *      var d = {foo {bar [5, 10]}};\n *      performRelayoutLike(d, {'baz': 34});\n *      d -> {foo: {bar: [5, 10]}, baz: 34}\n *\n *      var d = {foo: {bar: [5, 10]};\n *      performRelayoutLike(d, {'foo.baz[1]': 17});\n *      d -> {foo: {bar: [5, 17]}}\n *\n */\nfunction performRelayoutLike(parentObj: any, relayoutData: any) {\n  // Perform a relayout style operation on a given parent object\n  for (var rawKey in relayoutData) {\n    if (!relayoutData.hasOwnProperty(rawKey)) {\n      continue;\n    }\n\n    // Extract value for this key\n    var relayoutVal = relayoutData[rawKey];\n\n    // Set property value\n    if (relayoutVal === null) {\n      _.unset(parentObj, rawKey);\n    } else {\n      _.set(parentObj, rawKey, relayoutVal);\n    }\n  }\n}\n\n/**\n * Perform a Plotly.restyle like operation on an input object array\n *\n * @param {Array.<Object>} parentArray\n *  The object that the restyle operation should be applied to\n * @param {Object} restyleData\n *  A restyle object as accepted by Plotly.restyle\n * @param {Array.<Number>} restyleTraces\n *  Array of indexes of the traces that the resytle operation applies to\n *\n *  Examples:\n *      var d = [{foo: {bar: 1}}, {}, {}]\n *      performRestyleLike(d, {'foo.bar': 2}, [0])\n *      d -> [{foo: {bar: 2}}, {}, {}]\n *\n *      var d = [{foo: {bar: 1}}, {}, {}]\n *      performRestyleLike(d, {'foo.bar': 2}, [0, 1, 2])\n *      d -> [{foo: {bar: 2}}, {foo: {bar: 2}}, {foo: {bar: 2}}]\n *\n *      var d = [{foo: {bar: 1}}, {}, {}]\n *      performRestyleLike(d, {'foo.bar': [2, 3, 4]}, [0, 1, 2])\n *      d -> [{foo: {bar: 2}}, {foo: {bar: 3}}, {foo: {bar: 4}}]\n *\n */\nfunction performRestyleLike(\n  parentArray: any[],\n  restyleData: any,\n  restyleTraces: number[]\n) {\n  // Loop over the properties of restyleData\n  for (var rawKey in restyleData) {\n    if (!restyleData.hasOwnProperty(rawKey)) {\n      continue;\n    }\n\n    // Extract value for property and normalize into a value list\n    var valArray = restyleData[rawKey];\n    if (!Array.isArray(valArray)) {\n      valArray = [valArray];\n    }\n\n    // Loop over the indexes of the traces being restyled\n    for (var i = 0; i < restyleTraces.length; i++) {\n      // Get trace object\n      var traceInd = restyleTraces[i];\n      var trace = parentArray[traceInd];\n\n      // Extract value for this trace\n      var singleVal = valArray[i % valArray.length];\n\n      // Set property value\n      if (singleVal === null) {\n        _.unset(trace, rawKey);\n      } else if (singleVal !== undefined) {\n        _.set(trace, rawKey, singleVal);\n      }\n    }\n  }\n}\n\n/**\n * Perform a Plotly.moveTraces like operation on an input object array\n * @param parentArray\n *  The object that the moveTraces operation should be applied to\n * @param currentInds\n *  Array of the current indexes of traces to be moved\n * @param newInds\n *  Array of the new indexes that traces selected by currentInds should be\n *  moved to.\n *\n *  Examples:\n *      var d = [{foo: 0}, {foo: 1}, {foo: 2}]\n *      performMoveTracesLike(d, [0, 1], [2, 0])\n *      d -> [{foo: 1}, {foo: 2}, {foo: 0}]\n *\n *      var d = [{foo: 0}, {foo: 1}, {foo: 2}]\n *      performMoveTracesLike(d, [0, 2], [1, 2])\n *      d -> [{foo: 1}, {foo: 0}, {foo: 2}]\n */\nfunction performMoveTracesLike(\n  parentArray: any[],\n  currentInds: number[],\n  newInds: number[]\n) {\n  // ### Remove by currentInds in reverse order ###\n  var movingTracesData: any[] = [];\n  for (var ci = currentInds.length - 1; ci >= 0; ci--) {\n    // Insert moving parentArray at beginning of the list\n    movingTracesData.splice(0, 0, parentArray[currentInds[ci]]);\n    parentArray.splice(currentInds[ci], 1);\n  }\n\n  // ### Sort newInds and movingTracesData by newInds ###\n  var newIndexSortedArrays = _(newInds)\n    .zip(movingTracesData)\n    .sortBy(0)\n    .unzip()\n    .value();\n\n  newInds = newIndexSortedArrays[0];\n  movingTracesData = newIndexSortedArrays[1];\n\n  // ### Insert by newInds in forward order ###\n  for (var ni = 0; ni < newInds.length; ni++) {\n    parentArray.splice(newInds[ni], 0, movingTracesData[ni]);\n  }\n}\n\n/**\n * Remove nested properties from a parent object\n * @param {Object} parentObj\n *  Parent object from which properties or nested properties should be removed\n * @param {Array.<Array.<Number|String>>} keyPaths\n *  Array of key paths for properties that should be removed. Each key path\n *  is an array of properties names or array indexes that reference a\n *  property to be removed\n *\n *  Examples:\n *      var d = {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *      performRemoveProps(d, ['baz'])\n *      d -> {foo: [{bar: 0}, {bar: 1}]}\n *\n *      var d = {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *      performRemoveProps(d, ['foo[1].bar', 'baz'])\n *      d -> {foo: [{bar: 0}, {}]}\n *\n */\nfunction performRemoveProps(\n  parentObj: object,\n  keyPaths: Array<Array<number | string>>\n) {\n  for (var i = 0; i < keyPaths.length; i++) {\n    var keyPath = keyPaths[i];\n    _.unset(parentObj, keyPath);\n  }\n}\n\n/**\n * Return object that contains all properties in fullObj that are not\n * identical to the corresponding properties in removeObj\n *\n * Properties of fullObj and removeObj may be objects or arrays of objects\n *\n * Returned object is a deep clone of the properties of the input objects\n *\n * @param {Object} fullObj\n * @param {Object} removeObj\n *\n *  Examples:\n *      var fullD = {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *      var removeD = {baz: 32}\n *      createDeltaObject(fullD, removeD)\n *          -> {foo: [{bar: 0}, {bar: 1}]}\n *\n *      var fullD = {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *      var removeD = {baz: 45}\n *      createDeltaObject(fullD, removeD)\n *          -> {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *\n *      var fullD = {foo: [{bar: 0}, {bar: 1}], baz: 32}\n *      var removeD = {foo: [{bar: 0}, {bar: 1}]}\n *      createDeltaObject(fullD, removeD)\n *          -> {baz: 32}\n *\n */\nfunction createDeltaObject(fullObj: any, removeObj: any) {\n  // Initialize result as object or array\n  var res: any;\n  if (Array.isArray(fullObj)) {\n    res = new Array(fullObj.length);\n  } else {\n    res = {};\n  }\n\n  // Initialize removeObj to empty object if not specified\n  if (removeObj === null || removeObj === undefined) {\n    removeObj = {};\n  }\n\n  // Iterate over object properties or array indices\n  for (var p in fullObj) {\n    if (\n      p[0] !== \"_\" && // Don't consider private properties\n      fullObj.hasOwnProperty(p) && // Exclude parent properties\n      fullObj[p] !== null // Exclude cases where fullObj doesn't\n      // have the property\n    ) {\n      // Compute object equality\n      var props_equal;\n      props_equal = _.isEqual(fullObj[p], removeObj[p]);\n\n      // Perform recursive comparison if props are not equal\n      if (!props_equal || p === \"uid\") {\n        // Let uids through\n\n        // property has non-null value in fullObj that doesn't\n        // match the value in removeObj\n        var fullVal = fullObj[p];\n        if (removeObj.hasOwnProperty(p) && typeof fullVal === \"object\") {\n          // Recurse over object properties\n          if (Array.isArray(fullVal)) {\n            if (fullVal.length > 0 && typeof fullVal[0] === \"object\") {\n              // We have an object array\n              res[p] = new Array(fullVal.length);\n              for (var i = 0; i < fullVal.length; i++) {\n                if (!Array.isArray(removeObj[p]) || removeObj[p].length <= i) {\n                  res[p][i] = fullVal[i];\n                } else {\n                  res[p][i] = createDeltaObject(fullVal[i], removeObj[p][i]);\n                }\n              }\n            } else {\n              // We have a primitive array or typed array\n              res[p] = fullVal;\n            }\n          } else {\n            // object\n            var full_obj = createDeltaObject(fullVal, removeObj[p]);\n            if (Object.keys(full_obj).length > 0) {\n              // new object is not empty\n              res[p] = full_obj;\n            }\n          }\n        } else if (typeof fullVal === \"object\" && !Array.isArray(fullVal)) {\n          // Return 'clone' of fullVal\n          // We don't use a standard clone method so that we keep\n          // the special case handling of this method\n          res[p] = createDeltaObject(fullVal, {});\n        } else if (fullVal !== undefined && typeof fullVal !== \"function\") {\n          // No recursion necessary, Just keep value from fullObj.\n          // But skip values with function type\n          res[p] = fullVal;\n        }\n      }\n    }\n  }\n  return res;\n}\n\nfunction randstr(\n  existing?: { [k: string]: any },\n  bits?: number,\n  base?: number,\n  _recursion?: number\n): string {\n  if (!base) base = 16;\n  if (bits === undefined) bits = 24;\n  if (bits <= 0) return \"0\";\n\n  var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n  var res = \"\";\n  var i, b, x;\n\n  for (i = 2; digits === Infinity; i *= 2) {\n    digits = (Math.log(Math.pow(2, bits / i)) / Math.log(base)) * i;\n  }\n\n  var rem = digits - Math.floor(digits);\n\n  for (i = 0; i < Math.floor(digits); i++) {\n    x = Math.floor(Math.random() * base).toString(base);\n    res = x + res;\n  }\n\n  if (rem) {\n    b = Math.pow(base, rem);\n    x = Math.floor(Math.random() * b).toString(base);\n    res = x + res;\n  }\n\n  var parsed = parseInt(res, base);\n  if (\n    (existing && existing[res]) ||\n    (parsed !== Infinity && parsed >= Math.pow(2, bits))\n  ) {\n    if ((_recursion ?? 0) > 10) {\n      console.warn(\"randstr failed uniqueness\");\n      return res;\n    }\n    return randstr(existing, bits, base, (_recursion || 0) + 1);\n  } else return res;\n}\n\nexport default () => {\n  let model: FigureModel;\n  return {\n    initialize(ctx: any) {\n      model = new FigureModel(ctx.model, serializers);\n      model.initialize();\n    },\n    render({ el }: any) {\n      const view = new FigureView(model, el);\n      view.perform_render()\n      return () => view.remove();\n    }\n  }\n}","import { IJupyterWidgetRegistry } from \"@jupyter-widgets/base\";\n\nimport { Application, IPlugin } from \"@lumino/application\";\n\nimport { Widget } from \"@lumino/widgets\";\n\nimport { MODULE_NAME, MODULE_VERSION } from \"./version\";\n\nimport { FigureModel, FigureView } from \"./Figure\";\n\n/**\n * Activate the widget extension.\n */\nfunction activateWidgetExtension(\n  app: Application<Widget>,\n  registry: IJupyterWidgetRegistry\n): void {\n  registry.registerWidget({\n    name: MODULE_NAME,\n    version: MODULE_VERSION,\n    exports: {\n        FigureModel,\n        FigureView,\n    } as any\n  });\n}\n\n/**\n * The widget plugin.\n */\nconst widgetPlugin: IPlugin<Application<Widget>, void> = ({\n  id: \"jupyterlab-plotly\",\n  requires: [IJupyterWidgetRegistry],\n  activate: activateWidgetExtension,\n  autoStart: true,\n} as unknown) as IPlugin<Application<Widget>, void>;\n\nexport default widgetPlugin;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n"],"names":[],"sourceRoot":""}